// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/calc.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint32                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Arg1          float64                `protobuf:"fixed64,2,opt,name=Arg1,proto3" json:"Arg1,omitempty"`
	Arg2          float64                `protobuf:"fixed64,3,opt,name=Arg2,proto3" json:"Arg2,omitempty"`
	Operation     string                 `protobuf:"bytes,4,opt,name=Operation,proto3" json:"Operation,omitempty"`
	OperationTime int32                  `protobuf:"varint,5,opt,name=OperationTime,proto3" json:"OperationTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_calc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_calc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_calc_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Task) GetArg1() float64 {
	if x != nil {
		return x.Arg1
	}
	return 0
}

func (x *Task) GetArg2() float64 {
	if x != nil {
		return x.Arg2
	}
	return 0
}

func (x *Task) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Task) GetOperationTime() int32 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint32                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Result        float64                `protobuf:"fixed64,2,opt,name=Result,proto3" json:"Result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_calc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_calc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_calc_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResult) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TaskResult) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_calc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_calc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_calc_proto_rawDescGZIP(), []int{2}
}

var File_proto_calc_proto protoreflect.FileDescriptor

const file_proto_calc_proto_rawDesc = "" +
	"\n" +
	"\x10proto/calc.proto\x12\x04calc\"\x82\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\rR\x02ID\x12\x12\n" +
	"\x04Arg1\x18\x02 \x01(\x01R\x04Arg1\x12\x12\n" +
	"\x04Arg2\x18\x03 \x01(\x01R\x04Arg2\x12\x1c\n" +
	"\tOperation\x18\x04 \x01(\tR\tOperation\x12$\n" +
	"\rOperationTime\x18\x05 \x01(\x05R\rOperationTime\"4\n" +
	"\n" +
	"TaskResult\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\rR\x02ID\x12\x16\n" +
	"\x06Result\x18\x02 \x01(\x01R\x06Result\"\a\n" +
	"\x05Empty2]\n" +
	"\fOrchestrator\x12\"\n" +
	"\aGetTask\x12\v.calc.Empty\x1a\n" +
	".calc.Task\x12)\n" +
	"\bPostTask\x12\x10.calc.TaskResult\x1a\v.calc.EmptyB'Z%github.com/PavelFr8/Golang-Calc/protob\x06proto3"

var (
	file_proto_calc_proto_rawDescOnce sync.Once
	file_proto_calc_proto_rawDescData []byte
)

func file_proto_calc_proto_rawDescGZIP() []byte {
	file_proto_calc_proto_rawDescOnce.Do(func() {
		file_proto_calc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_calc_proto_rawDesc), len(file_proto_calc_proto_rawDesc)))
	})
	return file_proto_calc_proto_rawDescData
}

var file_proto_calc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_calc_proto_goTypes = []any{
	(*Task)(nil),       // 0: calc.Task
	(*TaskResult)(nil), // 1: calc.TaskResult
	(*Empty)(nil),      // 2: calc.Empty
}
var file_proto_calc_proto_depIdxs = []int32{
	2, // 0: calc.Orchestrator.GetTask:input_type -> calc.Empty
	1, // 1: calc.Orchestrator.PostTask:input_type -> calc.TaskResult
	0, // 2: calc.Orchestrator.GetTask:output_type -> calc.Task
	2, // 3: calc.Orchestrator.PostTask:output_type -> calc.Empty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_calc_proto_init() }
func file_proto_calc_proto_init() {
	if File_proto_calc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_calc_proto_rawDesc), len(file_proto_calc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_calc_proto_goTypes,
		DependencyIndexes: file_proto_calc_proto_depIdxs,
		MessageInfos:      file_proto_calc_proto_msgTypes,
	}.Build()
	File_proto_calc_proto = out.File
	file_proto_calc_proto_goTypes = nil
	file_proto_calc_proto_depIdxs = nil
}
